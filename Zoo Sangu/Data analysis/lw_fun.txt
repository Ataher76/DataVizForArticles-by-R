

mydata <- read_excel("EL2.xlsx", sheet = 2)


# Define the custom function
lw_reg <- function(lwdata) {
  
  # Check if lwdata has the correct column names
  if (!all(c("Length", "Weight") %in% colnames(lwdata))) {
    stop("The data must have 'Length' and 'Weight' columns")
  }
  
  # Fit the linear model (log-log transformation)
  mod <- lm(log(Weight) ~ log(Length), data = lwdata)
  
  # Print the summary of the model
  print(summary(mod))
  
  # Extract the coefficients (Intercept and Slope)
  intercept <- coef(mod)["(Intercept)"]
  slope <- coef(mod)["log(Length)"]
  
  # Calculate the actual values of a and b
  b <- slope  # b is the slope in the log-log model
  a <- exp(intercept)  # a is exp(intercept) because log(a) = intercept
  
  # Print the coefficients a and b
  cat("Estimated a (Intercept):", a, "\n")
  cat("Estimated b (Slope):", b, "\n")
  
  # Plot the original data in log-log scale
  plot(log(lwdata$Length), log(lwdata$Weight), pch=15, col="black", 
       xlab="log Length (cm)", ylab="log Weight (g)", main="Log-Log Length-Weight Plot")
  
  # Generate a sequence of log(Length) values for plotting the fitted line
  length_range_log <- seq(min(log(lwdata$Length)), max(log(lwdata$Length)), length.out = 100)
  
  # Calculate the corresponding log(Weight) values for the fitted line
  fitted_log_weight <- intercept + slope * length_range_log
  
  # Plot the fitted line
  lines(length_range_log, fitted_log_weight, col="red", lwd=2)
  
  # Add legend
  legend("topleft", legend=c("Observed Data", "Fitted Line"), 
         col=c("blue", "red"), pch=c(19, NA), lty=c(NA, 1))
  
  # Return the model object and coefficients
  return(list(model = mod, a = a, b = b))
}



# Run the function
lw_reg(lwdata =  mydata)
